version: "3.8"

services:
  postappdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - "$POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT"
    volumes:
      - db:/var/lib/postgresql/data  # Corrected volume path

  app:
    depends_on:
      - postappdb
    build: ./
    restart: on-failure
    env_file: ./.env
    ports:
      - "$SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postappdb:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE",
        "spring.datasource.username" : "$POSTGRESDB_USER",
        "spring.datasource.password" : "$POSTGRESDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"}'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  grafana:
    container_name: grafana
    image: grafana/grafana:latest  # Adjusted Grafana version
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - prometheus-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    user: root
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --log.level=debug
    ports:
      - "9090:9090"
    networks:
      - prometheus-network

networks:
  prometheus-network:

volumes:
  db:
  .m2:
