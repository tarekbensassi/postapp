pipeline {
    agent any

    environment {
        PATH = "$PATH:/usr/share/maven/bin"
      //  DOCKER_IMAGE = "trk90/postapp:${env.BUILD_NUMBER}"
        DOCKER_IMAGE = "trk90/postapp:lastet"

        SONAR_SCANNER_HOME = tool 'SonarQubeScanner5.0.1'
    }

    stages {
        stage('Get Code') {
            steps {
                echo 'Getting code'
                git 'https://github.com/tarekbensassi/postapp.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building'
              //  sh 'mvn clean package'
            }
        }

        stage('Push image') {
            steps {
               script {
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                   echo 'Push image'
                // Build and tag Docker image
               // docker.build(DOCKER_IMAGE)
                // Push the Docker image
             //   docker.image(DOCKER_IMAGE).push()
            }
        }
            }
        }


            stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQubeScanner5.0.1'
                    withSonarQubeEnv('sonarserver') {
                      echo 'Deploy SonarQube'
             //      sh "${scannerHome}/bin/sonar-scanner"
                    // sh "mvn sonar:sonar"
                    }
                }
            }
            }
        stage('Deploy PostgreSQL') {
            steps {
                script {
                    // Ensure you are in the correct directory
                    dir("${WORKSPACE}/k8s") {
                        echo 'Deploy PostgreSQL'
                        sh 'microk8s kubectl apply -f postgres-deployment.yaml'
                      
                    }
                }
            }
        }

        stage('Deploy Spring App') {
            steps {
                script {
                    // Ensure you are in the correct directory
                    dir("${WORKSPACE}/k8s") {
                        echo 'Deploy Spring App'
                        sh 'microk8s kubectl apply -f postapp-deployment.yaml'
                      
                    }
                }
            }
        }

        stage('Deploy Grafana') {
            steps {
                script {
                    // Ensure you are in the correct directory
                    dir("${WORKSPACE}/k8s") {
                        echo 'Deploy Grafana'
                        sh 'microk8s kubectl apply -f grafana-deployment.yaml'
                     
                    }
                }
            }
        }
        stage('Deploy prometheus') {
            steps {
                script {
                    // Ensure you are in the correct directory
                    dir("${WORKSPACE}/k8s") {
                        echo 'Deploy prometheus'
                        sh 'microk8s kubectl apply -f prometheus-deployment.yaml'
                    }
                }
            }
        }

        stage('Deploy PostgreSQL PV and PVC') {
            steps {
                script {
                    // Ensure you are in the correct directory
                    dir("${WORKSPACE}/k8s") {
                        echo 'Deploy PostgreSQL PV and PVC'
                        sh 'microk8s kubectl apply -f postgres-pv-pvc.yaml'
                    }
                }
            }
        }
    }
}
